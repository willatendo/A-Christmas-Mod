plugins {
	id 'eclipse'
	id 'maven-publish'
	id 'net.minecraftforge.gradle' version "${forgegradle_version}"
	id 'com.github.johnrengelman.shadow' version "${shadow_version}"
}

version = '1.0.0'
group = 'achristmasmod'
archivesBaseName = 'achristmasmod'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: 'official', version: minecraft_version

	runs {
		client {
			workingDirectory project.file('run')

			mods {
				achristmasmod {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			args '--mod', 'achristmasmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				achristmasmod {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { 
	srcDir 'src/generated/resources' 
}

repositories {
	// JEI
	maven { url 'https://dvs1.progwml6.com/files/maven' }
	// Registrate
	maven { url 'https://maven.tterrag.com/' }
}	

configurations {
	shade
}


dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	
	def registrate = "com.tterrag.registrate:Registrate:MC${major_version}-${registrate_version}"
	implementation fg.deobf(registrate)
	shade registrate
	
	compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
	compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
	runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}

jar {
	manifest {
		attributes([
				"Specification-Title" : "A Christmas Mod",
				"Specification-Vendor" : "Willatendo",
				"Specification-Version" : "1.0.0",
				"Implementation-Title" : project.name,
				"Implementation-Version" : project.jar.archiveVersion,
				"Implementation-Vendor" : "Willatendo",
				"Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

shadowJar {
	classifier = ''
	configurations = [project.configurations.shade]
	relocate 'com.tterrag.registrate', 'achristmasmod.repack.registrate'
}

reobf {
	shadowJar {}
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar

jar.finalizedBy('reobfJar')